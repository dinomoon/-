""" 
1번
문제 설명
약속 장소까지 지하철을 타고 가려 합니다. 약속 장소까지 가려면, 먼저 현재 역에서 지하철을 타고 X분동안 이동한 다음,
다른 지하철로 환승해서 Y분 동안 이동하면 됩니다.
단, 약속 장소까지 최대한 빠르게 이동해야 합니다.
또, 역에 도착한 시각과 지하철 도착 시각이 같은 경우 지하철에 탈 수 있다고 가정합니다.

현재 시각과 이동시간 X, Y, 현재 역에 열차가 도착하는 시간표, 환승 역에 열차가 도착하는 시간표가 주어질 때, 
약속 장소까지 최대한 빠르게 이동하면 몇 시에 도착하는지 구해주세요.

제한사항
입력 :

표준 입력을 사용해 데이터를 입력받으세요.
테스트 케이스 첫째 줄에 현재 시각이 HH:MM 형식으로 주어집니다.
테스트 케이스 둘째 줄에는 X Y가 순서대로 주어집니다.
X는 현재 역에서 지하철을 타고 이동하는 시간입니다.
Y는 환승 역에서 지하철을 타고 이동하는 시간입니다.
X, Y는 1 이상 60 이하인 자연수이며, 분 단위입니다.
테스트 케이스 셋째 줄에는 자연수 N, M이 순서대로 주어집니다.
N은 현재 역의 시간표 길이를 나타냅니다.
M은 환승 역의 시간표 길이를 나타냅니다.
N과 M은 1 이상 10 이하인 자연수입니다.
이후 N 줄에 걸쳐 현재 역의 지하철 도착 시각이 시간 순서대로 주어집니다.
현재 역의 지하철 도착 시각은 HH:MM 형태로 주어집니다.
다음 M 줄에 걸쳐 환승 역의 지하철 도착 시각이 시간 순서대로 주어집니다.
환승역의 지하철 도착 시각은 HH:MM 형태로 주어집니다.
지하철 도착 시각은 05:00 ~ 20:00 로만 주어지며, 날짜가 넘어가는 경우는 없습니다.
모든 시각은 24시간 표기법을 따릅니다.
약속 장소에 도착할 수 없는 경우는 주어지지 않습니다.
출력 :

표준 출력을 사용해 정답을 출력하세요
약속 장소까지 최대한 빠르게 이동하면 몇 시에 도착하는지 출력하세요.
도착 시각은 HH:MM 형식으로 출력해야 하며, 24시간 표기법을 사용해야 합니다.

입출력 예
입력 #1

12:10
20 30
3 2
12:05
12:20
12:35
12:30
12:50
출력 #1

13:20
입출력 예 설명
입출력 예 #1

현재 시각은 12시 10분이며, 다음과 같이 이동하면 됩니다.

12시 20분에 오는 지하철을 탑니다.
20분 동안 이동해서 환승역에서 12시 40분에 내립니다.
12시 50분에 오는 지하철을 탑니다.
30분 동안 이동하면 목적지에 13시 20분에 도착하며, 이때가 가장 빠른 시각입니다.
"""

# 입력 받기
Current_Time_H, Current_Time_M = map(int, input().split(":"))
X, Y = map(int, input().split())
X_table_N, Y_table_N = map(int, input().split())
X_table_H = []; X_table_M = []
Y_table_H = [];  Y_table_M = []

#############################################
# 시간표는 여러개 입력받으니까 시, 분을 나눠서 리스트에 집어 넣음
for i in range(X_table_N):
    H, M = map(int, input().split(":"))
    X_table_H.append(H)
    X_table_M.append(M)

for i in range(Y_table_N):
    H, M = map(int, input().split(":"))
    Y_table_H.append(H)
    Y_table_M.append(M)

#############################################
# 첫번째 열차는 어떤 열차를 타야하는지
if Current_Time_H == X_table_H[0]:
    for i in range(X_table_N):
        if X_table_M[i] - Current_Time_M >= 0:
            Ride_Index = i
            break
else:
    Ride_Index = 0

#############################################
# 첫번째 열차를 타고나면 몇시인지
Current_Time_M = X_table_M[Ride_Index] + X
if Current_Time_M >= 60:
    Current_Time_H += 1
    Current_Time_M = Current_Time_M - 60

#############################################
# 두번째 열차는 어떤 열차를 타야하는지
if Current_Time_H == Y_table_H[0]:
    for i in range(X_table_N):
        if Y_table_M[i] - Current_Time_M >= 0:
            Ride_Index = i
            break
else:
    Ride_Index = 0

#############################################
# 두번째 열차를 타고나면 몇시인지
Current_Time_M = Y_table_M[Ride_Index] + Y
if Current_Time_M >= 60:
    Current_Time_H += 1
    Current_Time_M = Current_Time_M - 60

#############################################
# 최종 출력
print(Current_Time_H, ":", Current_Time_M)